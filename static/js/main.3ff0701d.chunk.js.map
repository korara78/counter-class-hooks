{"version":3,"sources":["Components/ClassCounter.js","Components/HookCounter.js","App.js","reportWebVitals.js","index.js"],"names":["ClassCounter","props","incrementCount","setState","count","state","onClick","this","Component","HookCounter","useState","setCount","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAgCeA,E,kDAvBf,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,eAAiB,WACb,EAAKC,SAAS,CACdC,MAAO,EAAKC,MAAMD,MAAO,KARzB,EAAKC,MAAQ,CACTD,MAAO,GAHI,E,0CAcf,WACI,OACI,8BACI,yBAAQE,QAASC,KAAKL,eAAtB,oBAA8CK,KAAKF,MAAMD,MAAzD,a,GAlBWI,a,OCaZC,MAdf,WACI,MAA0BC,mBAAS,GAAnC,mBAAON,EAAP,KAAcO,EAAd,KAIA,OACI,8BACE,yBAAQL,QAAS,kBAAMK,EAASP,EAAQ,IAAxC,oBAAoDA,EAApD,UCSKQ,MAbf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,qEACA,cAAC,EAAD,IACA,wCACA,6FACA,cAAC,EAAD,IACA,mGCNSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ff0701d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n/*\r\n-Use the RCE shortcut\r\n-RCE creates import, class component syntax, and export syntax based on file's name. \r\n-Remove 'export' text from the class ClassCounter name.\r\n-Add constructor and super functions.\r\n-Initialiaze state with count 0.\r\n*/\r\nclass ClassCounter extends Component {\r\nconstructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        count: 0\r\n    }\r\n}\r\n\r\n/*Increment function. */\r\nincrementCount = () => {\r\n    this.setState({\r\n    count: this.state.count +1\r\n})\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.incrementCount}> Count {this.state.count} </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassCounter","import React, {useState} from 'react'\r\n\r\n/*\r\n-RFCE reactFunctionalExportComponent shourtcut to create function.\r\n-import useState from react.\r\n-array destructure of count and setCount variables using useState. \r\n*/\r\nfunction HookCounter() {\r\n    const [count, setCount] = useState(0)\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n          <button onClick={() => setCount(count + 1)}> Count {count} </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default HookCounter\r\n","import React from 'react'\nimport './App.css'\nimport ClassCounter from './Components/ClassCounter'\nimport HookCounter from './Components/HookCounter'\n\n/*\n-RFCE reactFunctionalExportComponent\n-add import of the ClassCounter component \n-add import of the HookCounter component\n*/\nfunction App() {\n  return (\n    <div className='App'>\n      <h1>Class Counter using Class Component</h1>\n      <ClassCounter />\n      <h2>versus</h2>\n      <h1>Hooks Counter using Functional Component with useState Hook</h1>\n      <HookCounter />\n      <h2>It looks the same here, but check the code. It's different!!!</h2>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}